# This is a basic workflow to help you get started with Actions

name: Rebase-BF-Patch

# Controls when the workflow will run
on:
  schedule:
    - cron: "0 0 * * *"   # <=== Change this value
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  rebase-patch:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Rebase script
        run: |
          set -uex
          set -o pipefail
          echo Script start
          TAGS=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/betaflight/betaflight/releases | jq -r '.[]|.draft=false |.tag_name')
          echo "$TAGS" > .tags
          
          LAST_TAG=4.5.0
          BRANCH_NAME=msp_delayed_disarm
          
          TAGS=$(sed "/${LAST_TAG}/q" <.tags | sed \$d)
          
          echo Tags: "$TAGS"
          [ -n "$TAGS" ] || {
            echo "No new releases, exiting!"
            exit 1
          }
          IFS=$'\n' read -d '' -a myarray <<< "$TAGS" || true
          echo Last tag: "${myarray[0]}"
          TAG=${myarray[0]}
          mkdir -p work
          cd work
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          git clone -o fork -b "${BRANCH_NAME}" https://github.com/alteman/betaflight
          cd betaflight
          COMMIT=$(git rev-list -n 1 "$BRANCH_NAME")
          git remote add origin https://github.com/betaflight/betaflight
          git fetch --all --tags 
          git checkout tags/$TAG
          git cherry-pick $COMMIT
          git branch rebased_$TAG
          git checkout rebased_$TAG
          git log -2
